// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/php-mariadb
// Update the VARIANT arg in docker-compose.yml to pick a PHP version
{
  "name": "Laravel Filament Boilerplate",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        // PHP
        "xdebug.php-debug",
        "onecentlin.laravel-extension-pack",
        "MehediDracula.php-namespace-resolver",
        "jaguadoromero.vscode-php-create-class",
        "VisualStudioExptTeam.vscodeintellicode",
        // Prettier
        "esbenp.prettier-vscode"
      ],
      "settings": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.formatOnSave": true,
        "[typescript]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        },
        "[json]": {
          "editor.defaultFormatter": "esbenp.prettier-vscode"
        }
      }
    }
  },
  // For use with PHP or Apache (e.g.php -S localhost:8080 or apache2ctl start)
  "forwardPorts": [
    3306,
    8000,
    8080
  ],
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "sudo chown -R vscode:vscode /workspace",
  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode"
}